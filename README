
PART 1 - Derby Database

# Step 1
- Create database and student table. I accomplished this through the InsertRecords.java file.

--------------------------------------------------------------------------------------------------------------
# Step 2
- /src/main/resources/MOCK_DATA.csv for student data was generated using https://www.mockaroo.com/.

--------------------------------------------------------------------------------------------------------------
# Step 3
- File to insert/retrieve records from Step 2 CSV file is at /src/main/java/InsertRecords.java
- Java Insert/DB Connection assistance from https://db.apache.org/derby/integrate/plugin_help/derby_app.html

--------------------------------------------------------------------------------------------------------------
# Step 4

- Screenshot located in /src/main/resources/step4_datasource.png
- Username: carrie; password: admin

==============================================================================================================
===+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++==
==============================================================================================================

PART 2 - JNDI

# Step 1

- Screenshot of below found in /src/main/resources/part2_step1_InitialContextExample.png

$ ~/Oracle/wls12.2.1.2/user_projects/domains/car_domain/bin/setDomainEnv.sh
$ javac examples/jndi/InitialContextExample.java
$ java examples.jndi.InitialContextExample t3://localhost:7001 weblogic admin1admin

- Screenshot of below found in /src/main/resources/part2_step1_WebLogicContextExample.png

$ ~/Oracle/wls12.2.1.2/user_projects/domains/car_domain/bin/setDomainEnv.sh
$ javac examples/jndi/WebLogicContextExample.java
$ java examples.jndi.WebLogicContextExample t3://localhost:7001

--------------------------------------------------------------------------------------------------------------
# Step 2

-


At this point you are ready to develop a Java program/client that will bind three StudentInfo objects into
the WebLogic Server JNDI naming service. Each of them should be an instance of the StudentInfo class
that you just developed. A client can use rebind( ) method instead of bind( ) to be able to rerun it multiple
times.

A few tips I would like to give you. As a Java bean, the StudentInfo class has to be of type Serializable.
Also, since you want WebLogic Server to bind an object to JNDI tree, WebLogic Server has to be able to
load StudentInfo class. So, you have to include a location (path) of StudentInfo class into CLASSPATH
before starting WebLogic Server.

    Run this Java program with WebLogic Server. Capture screen shots of your DOS prompt
    demonstrating successful execution.

Lastly, develop another Java client to lookup all of these bounded objects using the names they have
been bounded under. To verify that all the objects have the same state as when they were bound by the
first program simply print out the information provided by the getXXXX(...) methods of the StudentInfo
class.

    Run it and capture screen shots of your DOS prompt demonstrating successful execution.

Note 1: for the purposes of Part 2 of the homework assignment, we are binding three "StudentInfo"
objects to the WebLogic Server's JNDI tree and then are looking up for them, and we are not going to use
those StudentInfo objects anywhere within upcoming assignments.

Now you are ready to do the next steps related to working with stand-alone Java application.

    * Open another DOS shell
    * Before anything else, run "setdomainenv" script is located in
    c:\oracle\middleware\user_projects\domains\lfDomain\bin. This will set up CLASSPATH to
    include WLS jars and JEE jars that are necessary to compile and to run Java applications that are
    using WLS
    * Compile Java code examples provided in this HW
    * Run each Java application example
    * Refresh JNDI tree on Admin console and observe "example.one" entry in the JNDI tree that was
    created by WebLogicContextExample code


--------------------------------------------------------------------------------------------------------------
# Part 3

Ok, the last step in this assignment.

Take the program you have created in the JDBC part of this assignment (Part 1, Step #3) and modify it to
use the DataSource object defined in WLS to obtain a connection to the JHU database and to print all
records from table STUDENT.

Run your program and capture the screen shots with the output produced.